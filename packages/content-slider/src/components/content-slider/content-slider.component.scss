@import './content-slider.component.variables.scss';

content-slider {
  .wrapper {
    overflow-x: hidden;
    .slider {
      overflow-x: visible;
      transition: transform 0.2s ease-in-out;
      .item {
        transition: all 0.2s ease-in-out;
        
        &.active {
          z-index: 1;
        }
        
        img {
          width: 100%;
          max-width: 100%;
          max-height: 100%;
          object-fit: contain;
          user-select: none;
          pointer-events: none;
        }
        .item-capture {
          display: none;
        }
      }
    }
    .overlay {
      .controls, .capture {
        height: 100%;
      }
      .controls {
        position: relative;
        z-index: 1;
        pointer-events: none;
        .prev, .next {
          position: absolute;
          top: 50%;
          pointer-events: all;
          transform: translate(0,-50%);
        }
        .prev {
          left: 0;
        }
        .next {
          right: 0;
        }
      }
      .capture {
        overflow-y: auto;
        user-select: none;
      }
    }
  }
}

// Responsive sizes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $content-slider-cur-height: content-slider-breakpoint-height($breakpoint);
    $content-slider-capture-cur-height: content-slider-capture-breakpoint-height($breakpoint);
    $content-slider-active-item-cur-margin-bottom: content-slider-active-item-breakpoint-margin-bottom($breakpoint);
    $content-slider-cur-offset: content-slider-breakpoint-offset($breakpoint);
    $content-slider-active-item-cur-offset: content-slider-active-item-height($breakpoint);
    $content-slider-inactive-item-cur-offset: content-slider-inactive-item-height($breakpoint);

    content-slider {
      @if $content-slider-debug == true {
        &::after {
          content: "#{$breakpoint}";
          display: block;
          position: absolute;
        }
      }
      height: $content-slider-cur-height;
      min-height: $content-slider-cur-height;
      .wrapper {
        .slider, .overlay {
          padding-left: $content-slider-cur-offset;
        }
        .slider {
          max-height: $content-slider-cur-height;
          height: $content-slider-cur-height;
          .item {
            &.active {
              height: $content-slider-active-item-cur-offset;
              margin-bottom: -$content-slider-active-item-cur-margin-bottom;
            }
            &:not(.active) {
              height: $content-slider-inactive-item-cur-offset;
            }
          }
        }
        .overlay {
          height: $content-slider-cur-height;
          @if $breakpoint == sm {
            margin-top: $content-slider-active-item-cur-margin-bottom;
            .controls {
              display: none;
            }
          } @else if $breakpoint == xs {
            margin-top: $content-slider-active-item-cur-margin-bottom;
            .controls {
              display: none;
            }
          } @else {
            margin-top: -$content-slider-cur-height;
            .controls {
              display: flex;
            }
            .capture {
              max-height: $content-slider-capture-cur-height;
            }
          }

        }
      }
    }
  }
}

